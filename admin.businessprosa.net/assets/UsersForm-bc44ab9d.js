import{b as a,s as m}from"./index-c06c0c49.js";let i=[];const n=async()=>{const{options:e}=await a.rolesInputList({});return console.log(e),i=e,e},c=(e,o)=>({user_info:[{$formkit:"text",prefixIcon:"tools",outerClass:"col-12 sm:col-6 md:col-5",name:"userName",validation:"required",placeholder:e("userNamePlaceholder"),label:e("userNameLabel")},{$formkit:"email",prefixIcon:"email",validation:"required",outerClass:"col-12 sm:col-6 md:col-5",name:"userEmail",placeholder:e("userEmailPlaceholder"),label:e("userEmailLabel")},{$formkit:"text",prefixIcon:"number",outerClass:"col-12 sm:col-6 md:col-5",name:"userPhone",placeholder:e("userPhonePlaceholder"),label:e("userPhoneLabel")},{$cmp:"FormKit",props:{outerClass:"col-12 sm:col-6 md:col-2",type:"image",name:"userImage",value:"0.701566374267176.png"}}],Passwords:[{$el:"div",attrs:{class:"w-full"},children:[{$el:"div",attrs:{class:"w-12 my-2 m-auto p-3 grid bg-card border-round"},children:[{$formkit:"password",outerClass:"col-6",name:"userPassword",label:e("Passwords"),placeholder:e("passwordPlaceholder"),validation:"required|length:8"},{$formkit:"password",outerClass:"col-6",name:"userPassword_confirm",label:e("ConfirmPasswords"),placeholder:e("ConfirmPasswordsPlaceholder"),validation:"required|confirm"}]}]}],"User Roles":[{$formkit:"taglist",outerClass:"col-12",closeOnSelect:!1,name:"roles",label:e("Roles"),multiple:!0,placeholder:e("RolesPlaceholder"),"empty-message":"No roles found",options:o}],security:{isTitleHidden:!1,isTransparent:!1,inputs:[{$cmp:"FormKit",props:{outerClass:"w-full",type:"permissions",name:"permissions",toggleable:!1}}]}}),u=e=>({user_info:[{$formkit:"text",prefixIcon:"tools",outerClass:"col-12 sm:col-6 md:col-5",name:"userName",validation:"required",placeholder:e("userNamePlaceholder"),label:e("userNameLabel")},{$formkit:"email",prefixIcon:"email",validation:"required",outerClass:"col-12 sm:col-6 md:col-5",name:"userEmail",placeholder:e("userEmailPlaceholder"),label:e("userEmailLabel")},{$formkit:"text",prefixIcon:"number",outerClass:"col-12 sm:col-6 md:col-5",name:"userPhone",placeholder:e("userPhonePlaceholder"),label:e("userPhoneLabel")},{$cmp:"FormKit",props:{outerClass:"col-12 sm:col-6 md:col-2",type:"image",name:"userImage",value:"0.701566374267176.png"}}],"User Roles":[{$formkit:"taglist",outerClass:"col-12",closeOnSelect:!1,name:"roles",label:"roles",placeholder:"Select User Roles","empty-message":"No roles found",options:n}],security:{isTitleHidden:!1,isTransparent:!1,inputs:[{$cmp:"FormKit",props:{outerClass:"w-full",type:"permissions",name:"permissions",toggleable:!1}}]}}),d=e=>new Promise((o,r)=>{m.auth.signUp({email:e.userEmail,password:e.userPassword,phone:e.userPhone}).then(s=>{s.error?r(new Error(s.error.message)):(e.authUserId=s.data.user.id,a.userCreate(e).then(l=>{o(l)}).catch(l=>{console.log(l.message),r(new Error(l))}))}).catch(s=>{r(s)})}),t="users_list",f=async(e,o)=>{console.log("from getUserFormProps");const r=await n();return console.log(r),o=="create"?{context:{title:"user_create",submitHandler:{endpoint:d,redirectRoute:t},sections:c(e,i)}}:{context:{title:"user_update",submitHandler:{endpoint:a.userUpdate,redirectRoute:t},sections:u(e),findHandler:{endpoint:a.userFindForUpdate,requestPropertyName:"userId"}}}};export{f as g};
